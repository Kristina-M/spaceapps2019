{"ast":null,"code":"var _jsxFileName = \"/Users/kristinamahony/Documents/client_dev/spaceapps2019/space-apps/src/App.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport { Polygon } from \"google-maps-react\";\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nconst communities = {\n  CommunityA: [{\n    lat: 25.774,\n    lng: -80.190\n  }, {\n    lat: 18.466,\n    lng: -66.118\n  }, {\n    lat: 32.321,\n    lng: -64.757\n  }, {\n    lat: 25.774,\n    lng: -80.190\n  }],\n  CommunityB: [{\n    lat: 28.774,\n    lng: -83.190\n  }, {\n    lat: 21.466,\n    lng: -69.118\n  }, {\n    lat: 35.321,\n    lng: -67.757\n  }, {\n    lat: 28.774,\n    lng: -83.190\n  }]\n};\nconst triangleCoords = [{\n  lat: 25.774,\n  lng: -80.190\n}, {\n  lat: 18.466,\n  lng: -66.118\n}, {\n  lat: 32.321,\n  lng: -64.757\n}, {\n  lat: 25.774,\n  lng: -80.190\n}];\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.displayPolygon = () => {\n      return React.createElement(Polygon, {\n        paths: triangleCoords,\n        strokeColor: \"#ff4cc6\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"#ff46d2\",\n        fillOpacity: 0.35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    };\n\n    this.displayCommunities = () => {\n      var coords;\n\n      for (var community in communities) {\n        coords = communities[community];\n      }\n    };\n\n    this.state = {\n      stores: [{\n        lat: 47.49855629475769,\n        lng: -122.14184416996333\n      }, {\n        latitude: 47.359423,\n        longitude: -122.021071\n      }, {\n        latitude: 47.2052192687988,\n        longitude: -121.988426208496\n      }, {\n        latitude: 47.6307081,\n        longitude: -122.1434325\n      }, {\n        latitude: 47.3084488,\n        longitude: -122.2140121\n      }, {\n        latitude: 47.5524695,\n        longitude: -122.0425407\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.displayPolygon(), React.createElement(Marker, {\n      position: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyANs8IkEudsPGEA1dicW7gLY8T7K6orJ3E'\n})(MapContainer);","map":{"version":3,"sources":["/Users/kristinamahony/Documents/client_dev/spaceapps2019/space-apps/src/App.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","Polygon","mapStyles","width","height","communities","CommunityA","lat","lng","CommunityB","triangleCoords","MapContainer","constructor","props","displayMarkers","state","stores","map","store","index","latitude","longitude","console","log","displayPolygon","displayCommunities","coords","community","render","google","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport { Polygon } from \"google-maps-react\";\n\nconst mapStyles = {\n    width: '100%',\n    height: '100%'\n};\n\nconst communities = {\n    CommunityA: [\n        {lat: 25.774, lng: -80.190},\n        {lat: 18.466, lng: -66.118},\n        {lat: 32.321, lng: -64.757},\n        {lat: 25.774, lng: -80.190}\n    ],\n    CommunityB: [\n        {lat: 28.774, lng: -83.190},\n        {lat: 21.466, lng: -69.118},\n        {lat: 35.321, lng: -67.757},\n        {lat: 28.774, lng: -83.190}\n    ]\n}\n\nconst triangleCoords = [\n    {lat: 25.774, lng: -80.190},\n    {lat: 18.466, lng: -66.118},\n    {lat: 32.321, lng: -64.757},\n    {lat: 25.774, lng: -80.190}\n];\n\nexport class MapContainer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stores: [{lat: 47.49855629475769, lng: -122.14184416996333},\n                {latitude: 47.359423, longitude: -122.021071},\n                {latitude: 47.2052192687988, longitude: -121.988426208496},\n                {latitude: 47.6307081, longitude: -122.1434325},\n                {latitude: 47.3084488, longitude: -122.2140121},\n                {latitude: 47.5524695, longitude: -122.0425407}]\n        }\n    }\n\n    displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n            return <Marker key={index} id={index} position={{\n                lat: store.latitude,\n                lng: store.longitude\n            }}\n                           onClick={() => console.log(\"You clicked me!\")}/>\n        })\n    }\n\n    displayPolygon = () => {\n        return <Polygon\n            paths={triangleCoords}\n            strokeColor=\"#ff4cc6\"\n            strokeOpacity={0.8}\n            strokeWeight={2}\n            fillColor=\"#ff46d2\"\n            fillOpacity={0.35} />\n    }\n\n    displayCommunities = () => {\n        var coords;\n        for ( var community in communities){\n            coords = communities[community]\n\n        }\n    }\n\n\n\n    render() {\n        return (\n            <Map\n                google={this.props.google}\n                zoom={8}\n                style={mapStyles}\n                initialCenter={{lat: -34.397, lng: 150.644 }}>\n                {this.displayPolygon()}\n                <Marker\n                    position={{ lat: -34.397, lng: 150.644 }}\n                />\n            </Map>\n\n\n        );\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyANs8IkEudsPGEA1dicW7gLY8T7K6orJ3E'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}